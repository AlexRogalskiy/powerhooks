(this.webpackJsonppowerhooks=this.webpackJsonppowerhooks||[]).push([[0],{474:function(e,t,a){"use strict";a.r(t);var o=a(59),i=a(199),s=a(0),n=a(200),r=a(204),l=a(205),c=a(9),h=a.p+"static/media/background-dark.e4d734b5.jpg",d=a.p+"static/media/background-light.a152dffc.jpg",p=a.p+"static/media/hero-video.99f8a1ad.mp4",b=a(78),m=a.p+"static/media/todo-list.50792bfc.mp4",u=a(79),g=a.p+"static/media/useCallbackFactory.6c0887be.png",j=a.p+"static/media/useConstCallback.07317f8f.png",f=a.p+"static/media/useGlobalState.b94c50d3.png",y=a(129),k=a(99),w=a(216),v=a.p+"static/media/gitlanding-logo.a26bffba.png",x=a.p+"static/media/OnyxiaLogo.5b583358.svg",O=a.p+"static/media/tss.02d0775a.png",G=a(217),I=a(1),S=Object(c.makeStyles)()((function(e){return{hero:{backgroundImage:'url("'.concat(e.isDarkModeEnabled?h:d,'")'),backgroundRepeat:"no-repeat",paddingTop:e.spacing(6),"& h3":{color:e.colors.useCases.typography.textPrimary},backgroundSize:"cover",backgroundPositionY:"bottom"},title:Object(o.a)(Object(o.a)(Object(o.a)({},e.spacing.rightLeft("padding","".concat(e.paddingRightLeft,"px"))),{},{textAlign:"center"},e.typography.variants["page heading"].style),e.spacing.topBottom("margin",9)),section:{"& img":{maxWidth:600}},card:{width:800}}})),C=Object(s.memo)((function(){var e=S().classes;return Object(I.jsxs)(n.GlTemplate,{header:Object(I.jsx)(r.GlHeader,{title:"POWERHOOKS",links:[{label:"GITHUB",link:{href:"https://github.com/garronej/powerhooks"}},{label:"DOCUMENTATION",link:{href:"https://docs.powerhooks.dev/"}}],enableDarkModeSwitch:!0,githubRepoUrl:"https://github.com/garronej/powerhooks",githubButtonSize:"large"}),headerOptions:{position:"fixed",isRetracted:"smart"},footer:Object(I.jsx)(G.GlFooter,{links:[{title:"github",href:"https://github.com/garronej/powerhooks"},{title:"Documentation",href:"https://docs.powerhooks.dev/"}],bottomDivContent:"M I T licence"}),children:[Object(I.jsx)(l.GlHero,{title:"A collection of essential React hooks",subTitle:"Powerhooks are the hooks you wish were built in React",imageSrc:p,className:e.hero,linkToSectionBelowId:"firstSection",hasImageShadow:!0}),Object(I.jsx)(b.GlArticle,{id:"firstSection",title:"Enhance your React Game",body:"**React** **Powerhooks** solves an array of problems that would otherwise be very tricky to solve. For instance being able to inject parameters into a callback function with out it having to be re instantiated on every render, or easily getting measurement on a dom element.\n\nCheckout a repository of examples.\n                ",buttonLabel:"Github",buttonLink:{href:"https://www.github.com/thieryw/powerhooks-example"},illustration:Object(I.jsx)(u.GlIllustration,{type:"image",url:m,hasShadow:!0}),illustrationPosition:"left"}),Object(I.jsx)("h1",{className:e.title,children:"Important examples"}),Object(I.jsx)(b.GlArticle,{className:e.section,title:"useGlobalState",body:"This hook enables us to have a state persisting across\nreloads that is accessible through out the entire app,\nand this without involving a provider.",illustration:Object(I.jsx)(u.GlIllustration,{type:"image",url:f,hasShadow:!0}),animationVariant:"primary"}),Object(I.jsx)(y.GlSectionDivider,{}),Object(I.jsx)(b.GlArticle,{className:e.section,title:"useConstCallback",body:"Each time x \nand/or y have changed since the previous render **onClick** gets a new reference. \nWitch is a pain when using **React.memo**. \n\nOn top of that if an involved state is forgotten in the dependency array\nthe callback will encapsulate states that are out of date.\nWith **useConstCallback**, the value of onClick never changes across renders\nyet the values of x ant y are always up to date.",illustration:Object(I.jsx)(u.GlIllustration,{type:"image",url:j,hasShadow:!0}),illustrationPosition:"left",animationVariant:"secondary"}),Object(I.jsx)(y.GlSectionDivider,{}),Object(I.jsx)(b.GlArticle,{className:e.section,title:"useCallbackFactory",body:"Even if **<TodoItem>** uses **React.memo**, each time a \nitem of the list is set to completed every **<TodoItem>** is \nre-rendered because of onComplete that changes at every render for every item. \n\nWhereas the value returned by **onCompleteFactory** is always the same for \na specific todo. With **useCallbackFactory** we can set an element of the list to \ncompleted without re-rendering every items.",illustration:Object(I.jsx)(u.GlIllustration,{type:"image",url:g,hasShadow:!0}),animationVariant:"primary"}),Object(I.jsx)(w.GlSlider,{title:"Projects that use Powerhooks",autoPlayTimeInterval:4,slides:[Object(I.jsx)(k.GlLogoCard,{className:e.card,iconUrls:[v],buttonLabel:"Learn More",title:"Gitlanding",paragraph:"A Collection of React components for building a stylish landing page for github projects",link:{href:"https://github.com/thieryw/gitlanding"}}),Object(I.jsx)(k.GlLogoCard,{className:e.card,iconUrls:[x],buttonLabel:"Learn More",title:"Onyxia UI",paragraph:"A powerful UI tool kit for React based on Material UI",link:{href:"https://github.com/InseeFrLab/onyxia-ui"}}),Object(I.jsx)(k.GlLogoCard,{className:e.card,iconUrls:[O],buttonLabel:"Learn More",title:"TSS React",paragraph:"A replacement for React jss and for Material UI's makeStyle. It's API is focused on providing maximum type safety and minimum verbosity.",link:{href:"https://github.com/garronej/tss-react"}})]})]})}));i.render(Object(I.jsx)(c.ThemeProviderDefault,{children:Object(I.jsx)(C,{})}),document.getElementById("root"))}},[[474,152,153]]]);
//# sourceMappingURL=main.655a281c.chunk.js.map