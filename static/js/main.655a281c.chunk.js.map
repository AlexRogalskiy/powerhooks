{"version":3,"sources":["assets/img/background-dark.jpg","assets/img/background-light.jpg","assets/videos/hero-video.mp4","assets/videos/todo-list.mp4","assets/img/useCallbackFactory.png","assets/img/useConstCallback.png","assets/img/useGlobalState.png","assets/img/gitlanding-logo.png","assets/svg/OnyxiaLogo.svg","assets/img/tss.png","index.tsx"],"names":["useStyles","makeStyles","theme","isDarkModeEnabled","backgroundUrlDark","backgroundUrlLight","spacing","colors","useCases","typography","textPrimary","rightLeft","paddingRightLeft","variants","style","topBottom","App","memo","classes","GlTemplate","header","GlHeader","title","links","enableDarkModeSwitch","githubRepoUrl","githubButtonSize","headerOptions","footer","GlFooter","bottomDivContent","GlHero","subTitle","imageSrc","heroMp4","className","hero","linkToSectionBelowId","hasImageShadow","GlArticle","id","body","buttonLabel","buttonLink","illustration","GlIllustration","type","url","todoListMp4","hasShadow","illustrationPosition","section","useGlobalStateSnippet","animationVariant","GlSectionDivider","useConstCallbackSnippet","useCallbackFactoryCodeSnippet","GlSlider","autoPlayTimeInterval","slides","GlLogoCard","card","iconUrls","gitlandingLogoPng","paragraph","link","onyxiaLogoSvg","tssPng","reactDom","document","getElementById"],"mappings":"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","file":"static/js/main.655a281c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/background-dark.e4d734b5.jpg\";","export default __webpack_public_path__ + \"static/media/background-light.a152dffc.jpg\";","export default __webpack_public_path__ + \"static/media/hero-video.99f8a1ad.mp4\";","export default __webpack_public_path__ + \"static/media/todo-list.50792bfc.mp4\";","export default __webpack_public_path__ + \"static/media/useCallbackFactory.6c0887be.png\";","export default __webpack_public_path__ + \"static/media/useConstCallback.07317f8f.png\";","export default __webpack_public_path__ + \"static/media/useGlobalState.b94c50d3.png\";","export default __webpack_public_path__ + \"static/media/gitlanding-logo.a26bffba.png\";","export default __webpack_public_path__ + \"static/media/OnyxiaLogo.5b583358.svg\";","export default __webpack_public_path__ + \"static/media/tss.02d0775a.png\";","import * as reactDom from \"react-dom\";\nimport {memo} from \"react\";\nimport {GlTemplate} from \"gitlanding/GlTemplate\";\nimport {GlHeader} from \"gitlanding/GlHeader\";\nimport {GlHero} from \"gitlanding/GlHero\";\nimport {makeStyles, ThemeProviderDefault} from \"gitlanding/theme\";\nimport backgroundUrlDark from \"./assets/img/background-dark.jpg\";\nimport backgroundUrlLight from \"./assets/img/background-light.jpg\";\nimport heroMp4 from \"./assets/videos/hero-video.mp4\";\nimport {GlArticle} from \"gitlanding/GlArticle\";\nimport todoListMp4 from \"./assets/videos/todo-list.mp4\";\nimport {GlIllustration} from \"gitlanding/GlIllustration\";\nimport useCallbackFactoryCodeSnippet from \"./assets/img/useCallbackFactory.png\"\nimport useConstCallbackSnippet from \"./assets/img/useConstCallback.png\"\nimport useGlobalStateSnippet from \"./assets/img/useGlobalState.png\"\nimport {GlSectionDivider} from \"gitlanding/GlSectionDivider\";\nimport {GlLogoCard} from \"gitlanding/GlCards/GlLogoCard\"\nimport {GlSlider} from \"gitlanding/GlSlider\";\nimport gitlandingLogoPng from \"./assets/img/gitlanding-logo.png\";\nimport onyxiaLogoSvg from \"./assets/svg/OnyxiaLogo.svg\";\nimport tssPng from \"./assets/img/tss.png\";\nimport {GlFooter} from \"gitlanding/GlFooter\";\n\nconst useStyles = makeStyles()(\n    theme => ({\n        \"hero\": {\n            \"backgroundImage\": `url(\"${theme.isDarkModeEnabled ? backgroundUrlDark : backgroundUrlLight}\")`,\n            \"backgroundRepeat\": \"no-repeat\",\n            \"paddingTop\": theme.spacing(6),\n            \"& h3\": {\n                \"color\": theme.colors.useCases.typography.textPrimary\n            },\n            \"backgroundSize\": \"cover\",\n            \"backgroundPositionY\": \"bottom\",\n\n        },\n\n        \"title\": {\n            ...theme.spacing.rightLeft(\"padding\", `${theme.paddingRightLeft}px`),\n            \"textAlign\": \"center\",\n            ...theme.typography.variants[\"page heading\"].style,\n            ...theme.spacing.topBottom(\"margin\", 9)\n\n        },\n        \"section\": {\n            \"& img\": {\n                \"maxWidth\": 600\n            }\n        },\n        \"card\": {\n            \"width\": 800\n\n        }\n    })\n)\n\nconst App = memo(()=>{\n\n    const {classes} = useStyles();\n\n    return <GlTemplate\n        header={<GlHeader \n            title=\"POWERHOOKS\"\n            links={[\n                {\n                    \"label\": \"GITHUB\",\n                    \"link\": {\n                        \"href\": \"https://github.com/garronej/powerhooks\"\n                    }\n                },\n                {\n                    \"label\": \"DOCUMENTATION\",\n                    \"link\": {\n                        \"href\": \"https://docs.powerhooks.dev/\"\n                    }\n                }\n            ]}\n            enableDarkModeSwitch\n            githubRepoUrl=\"https://github.com/garronej/powerhooks\"\n            githubButtonSize=\"large\"\n        />}\n        headerOptions={{\n            \"position\": \"fixed\",\n            \"isRetracted\": \"smart\"\n        }}\n        footer={<GlFooter \n            links={[\n                {\n                    \"title\": \"github\",\n                    \"href\": \"https://github.com/garronej/powerhooks\"\n                },\n                {\n                    \"title\": \"Documentation\",\n                    \"href\": \"https://docs.powerhooks.dev/\"\n                }\n            ]}\n            bottomDivContent=\"M I T licence\"\n        />}\n\n    >\n\n            <GlHero\n                title=\"A collection of essential React hooks\"\n                subTitle=\"Powerhooks are the hooks you wish were built in React\"\n                imageSrc={heroMp4}\n                className={classes.hero}\n                linkToSectionBelowId=\"firstSection\"\n                hasImageShadow={true}\n            />\n\n            <GlArticle \n                id=\"firstSection\"\n                title=\"Enhance your React Game\"\n                body={`**React** **Powerhooks** solves an array of problems that would otherwise be very tricky to solve. For instance being able to inject parameters into a callback function with out it having to be re instantiated on every render, or easily getting measurement on a dom element.\n\nCheckout a repository of examples.\n                `}\n                buttonLabel=\"Github\"\n                buttonLink={{\n                    \"href\": \"https://www.github.com/thieryw/powerhooks-example\"\n                }}\n                illustration={<GlIllustration \n                    type=\"image\"\n                    url={todoListMp4}\n                    hasShadow={true}\n                />}\n                illustrationPosition=\"left\"\n            />\n\n            <h1 className={classes.title}>Important examples</h1>\n\n            <GlArticle \n                className={classes.section}\n                title=\"useGlobalState\"\n                body={`This hook enables us to have a state persisting across\nreloads that is accessible through out the entire app,\nand this without involving a provider.`}\n                illustration={<GlIllustration\n                    type=\"image\"\n                    url={useGlobalStateSnippet}\n                    hasShadow={true}\n                />}\n                animationVariant=\"primary\"\n            />\n\n            <GlSectionDivider />\n\n\n            <GlArticle \n                className={classes.section}\n                title=\"useConstCallback\"\n\n                body= {`Each time x \nand/or y have changed since the previous render **onClick** gets a new reference. \nWitch is a pain when using **React.memo**. \n\nOn top of that if an involved state is forgotten in the dependency array\nthe callback will encapsulate states that are out of date.\nWith **useConstCallback**, the value of onClick never changes across renders\nyet the values of x ant y are always up to date.`}\n                illustration={<GlIllustration\n                    type=\"image\"\n                    url={useConstCallbackSnippet}\n                    hasShadow={true}\n                />}\n                illustrationPosition=\"left\"\n                animationVariant=\"secondary\"\n            />\n\n            <GlSectionDivider />\n\n            <GlArticle \n                className={classes.section}\n                title=\"useCallbackFactory\"\n\n                body={`Even if **<TodoItem>** uses **React.memo**, each time a \nitem of the list is set to completed every **<TodoItem>** is \nre-rendered because of onComplete that changes at every render for every item. \n\nWhereas the value returned by **onCompleteFactory** is always the same for \na specific todo. With **useCallbackFactory** we can set an element of the list to \ncompleted without re-rendering every items.`}\n                illustration={<GlIllustration\n                    type=\"image\"\n                    url={useCallbackFactoryCodeSnippet}\n                    hasShadow={true}\n                />}\n                animationVariant=\"primary\"\n            />\n\n    <GlSlider \n        title=\"Projects that use Powerhooks\"\n        autoPlayTimeInterval={4}\n        slides={[\n            <GlLogoCard \n                className={classes.card}\n                iconUrls={[gitlandingLogoPng]}\n                buttonLabel=\"Learn More\"\n                title=\"Gitlanding\"\n                paragraph=\"A Collection of React components for building a stylish landing page for github projects\"\n                link={{\n                    \"href\": \"https://github.com/thieryw/gitlanding\"\n                }}\n            />,\n            <GlLogoCard \n                className={classes.card}\n                iconUrls={[onyxiaLogoSvg]}\n                buttonLabel=\"Learn More\"\n                title=\"Onyxia UI\"\n                paragraph=\"A powerful UI tool kit for React based on Material UI\"\n                link={{\n                    \"href\": \"https://github.com/InseeFrLab/onyxia-ui\"\n                }}\n            />,\n            <GlLogoCard \n                className={classes.card}\n                iconUrls={[tssPng]}\n                buttonLabel=\"Learn More\"\n                title=\"TSS React\"\n                paragraph=\"A replacement for React jss and for Material UI's makeStyle. It's API is focused on providing maximum type safety and minimum verbosity.\"\n                link={{\n                    \"href\": \"https://github.com/garronej/tss-react\"\n                }}\n            />\n        ]}\n    />\n\n    </GlTemplate>\n\n})\n\n\nreactDom.render(\n    <ThemeProviderDefault>\n        <App/>\n    </ThemeProviderDefault>,\n    document.getElementById(\"root\")\n);\n\n\n\n"],"sourceRoot":""}