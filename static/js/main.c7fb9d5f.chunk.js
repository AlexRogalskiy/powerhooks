(this.webpackJsonppowerhooks=this.webpackJsonppowerhooks||[]).push([[0],{498:function(e,t,a){"use strict";a.r(t);var o=a(59),i=a(215),s=a(0),n=a(99),r=a(220),l=a(221),c=a(10),h=a.p+"static/media/background-dark.e4d734b5.jpg",d=a.p+"static/media/background-light.a152dffc.jpg",p=a.p+"static/media/hero-video.99f8a1ad.mp4",b=a(80),u=a(81),g=a.p+"static/media/useCallbackFactory.f36e718f.png",m=a.p+"static/media/useConstCallback.07317f8f.png",j=a.p+"static/media/useGlobalState.b94c50d3.png",k=a(111),f=a(141),O=a(232),y=a.p+"static/media/gitlanding-logo.a26bffba.png",w=a.p+"static/media/OnyxiaLogo.5b583358.svg",x=a(233),v=a.p+"static/media/useDomRect.83108eed.png",G=a(2),S=Object(c.makeStyles)()((function(e){return{hero:{backgroundImage:'url("'.concat(e.isDarkModeEnabled?h:d,'")'),backgroundRepeat:"no-repeat",paddingTop:e.spacing(6),"& h3":{color:e.colors.useCases.typography.textPrimary},backgroundSize:"cover",backgroundPositionY:"bottom"},title:Object(o.a)(Object(o.a)(Object(o.a)({},e.spacing.rightLeft("padding","".concat(e.paddingRightLeft,"px"))),{},{textAlign:"center"},e.typography.variants["page heading"].style),{},{marginTop:e.spacing(8),marginBottom:e.spacing(6)}),section:{"& img":{maxWidth:700}},card:{width:800}}})),I=Object(s.memo)((function(){var e=S().classes;return Object(G.jsxs)(n.GlTemplate,{header:Object(G.jsx)(r.GlHeader,{title:"POWERHOOKS",links:[{label:"GITHUB",link:{href:"https://github.com/garronej/powerhooks"}},{label:"DOCUMENTATION",link:{href:"https://docs.powerhooks.dev/"}}],enableDarkModeSwitch:!0,githubRepoUrl:"https://github.com/garronej/powerhooks",githubButtonSize:"large"}),headerOptions:{position:"fixed",isRetracted:"smart"},footer:Object(G.jsx)(x.GlFooter,{links:[{title:"github",href:"https://github.com/garronej/powerhooks"},{title:"Documentation",href:"https://docs.powerhooks.dev/"}],bottomDivContent:"M I T licence"}),children:[Object(G.jsx)(l.GlHero,{title:"A collection of essential React hooks",subTitle:"Powerhooks are the hooks you wish were built in React",imageSrc:p,className:e.hero,linkToSectionBelowId:"firstSection",hasImageShadow:!0}),Object(G.jsx)("h1",{className:e.title,children:"Main hooks"}),Object(G.jsx)(b.GlArticle,{id:"firstSection",className:e.section,title:"useConstCallback",body:"Believe it or not there is no valid reason to require user to pass in a dependency array to `useCallback`.",illustration:Object(G.jsx)(u.GlIllustration,{type:"image",url:m,hasShadow:!0}),hasAnimation:!0}),Object(G.jsx)(k.GlSectionDivider,{}),Object(G.jsx)(b.GlArticle,{className:e.section,title:"useCallbackFactory",illustrationPosition:"left",body:"To avoid re-rendering every list item component when the parent re-renders.\n\nLet's assume `<TodoItem />` uses `React.memo`, in the example without powerhooks, every render of the parent the reference of `onComplete` changes.\n`useCallbackFactory` on the other hand always returns the same function for a given `todo: string`.\n\n                ",illustration:Object(G.jsx)(u.GlIllustration,{type:"image",url:g,hasShadow:!0}),hasAnimation:!0}),Object(G.jsx)(k.GlSectionDivider,{}),Object(G.jsx)(b.GlArticle,{className:e.section,title:"useGlobalState",body:'Create global state persistent across reloads that is accessible through out the entire app, and this without involving a provider.\n\nNOTE: It makes uses of TypeScript\'s template literal types to return `useIsDarkModeEnabled` based on the `name` parameter (`"isDarkModeEnabled"`).\nHow cool is that ?!\n\n\n            ',illustration:Object(G.jsx)(u.GlIllustration,{type:"image",url:j,hasShadow:!0}),hasAnimation:!0}),Object(G.jsx)(k.GlSectionDivider,{}),Object(G.jsx)(b.GlArticle,{className:e.section,title:"useDomRect",illustrationPosition:"left",body:"Measure rendered components in realtime.\n\nWARNING: Not yet compatible with SSR\n            ",illustration:Object(G.jsx)(u.GlIllustration,{type:"image",url:v,hasShadow:!0}),hasAnimation:!0}),Object(G.jsx)(O.GlSlider,{title:"Projects that use Powerhooks",autoPlayTimeInterval:4,slides:[Object(G.jsx)(f.GlLogoCard,{className:e.card,iconUrls:[y],buttonLabel:"Learn More",title:"Gitlanding",paragraph:"A Collection of React components for building a stylish landing page for github projects",link:{href:"https://github.com/thieryw/gitlanding"}}),Object(G.jsx)(f.GlLogoCard,{className:e.card,iconUrls:[w],buttonLabel:"Learn More",title:"Onyxia UI",paragraph:"A powerful UI tool kit for React based on Material UI",link:{href:"https://github.com/InseeFrLab/onyxia-ui"}})]})]})}));i.render(Object(G.jsx)(c.ThemeProviderDefault,{children:Object(G.jsx)(I,{})}),document.getElementById("root"))}},[[498,152,153]]]);
//# sourceMappingURL=main.c7fb9d5f.chunk.js.map